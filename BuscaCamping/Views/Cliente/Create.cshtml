@model BuscaCamping.DataAccess.ViewModels.ClienteViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Agregar Cliente</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Dni, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Dni, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Dni, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Apellido,"", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.FechaNac, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.cliente.FechaNac, "", new { @class = "date-picker" })
                @Html.ValidationMessageFor(model => model.cliente.FechaNac, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Nacionalidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              
                    @Html.RadioButtonFor(model => model.cliente.Nacionalidad, true, new { id = "argentino" })
                    @Html.Label("argentino", "Argentino")

                    @Html.RadioButtonFor(model => model.cliente.Nacionalidad, false, new { id = "extranjero" })
                    @Html.Label("extranjero", "Extranjero")

                @Html.ValidationMessageFor(model => model.cliente.Nacionalidad, "", new { @class = "text-danger" })
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.IdTipoSexo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cliente.IdTipoSexo,
                new SelectList(Model.sexos, "idTipoSexo", "descripcion"))            
            </div>
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Calle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Calle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Calle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.NumeroCalle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.NumeroCalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.NumeroCalle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.TelFijo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.TelFijo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.TelFijo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cliente.Celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cliente.Celular, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.IdProvincia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cliente.IdProvincia, ViewData["prov"] as List<SelectListItem>,"Por favor seleccione una opción")
                @Html.ValidationMessageFor(model => model.cliente.IdProvincia, "", new { @class = "text-danger" })
                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.IdDepartamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cliente.IdDepartamento, new SelectList(string.Empty, "Value", "Text"), "Por favor seleccione una opción", new { style = "width:280px", @class = "dropdown1" })
                @Html.ValidationMessageFor(model => model.cliente.IdDepartamento, "", new { @class = "text-danger" })
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cliente.IdLocalidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.cliente.IdLocalidad, new SelectList(string.Empty, "Value", "Text"), "Por favor seleccione una opción", new { style = "width:280px", @class = "dropdown1" })
                @Html.ValidationMessageFor(model => model.cliente.IdLocalidad, "", new { @class = "text-danger" })
                
               
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Agregar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
